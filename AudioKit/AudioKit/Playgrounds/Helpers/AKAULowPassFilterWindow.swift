//
//  AKAULowPassFilterWindow.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

#if os(OSX)
    import Foundation
    import Cocoa

    public class AKAULowPassFilterWindow: NSWindow {

        let windowWidth = 400
        let padding = 30
        let sliderHeight = 20
        let numberOfComponents = 2

        public let cutoffFrequencySlider: NSSlider
        public let resonanceSlider: NSSlider

        let cutoffFrequencyTextField: NSTextField
        let resonanceTextField: NSTextField

        var lowPassFilter: AKAULowPassFilter

        public init(_ control: AKAULowPassFilter) {
            lowPassFilter = control
            let sliderWidth = windowWidth - 2 * padding

            cutoffFrequencySlider = NSSlider(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))
            resonanceSlider = NSSlider(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))

            cutoffFrequencyTextField = NSTextField(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))
            resonanceTextField = NSTextField(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))

            let titleHeightApproximation = 50
            let windowHeight = padding * 2 + titleHeightApproximation + numberOfComponents * 3 * sliderHeight

            super.init(contentRect: NSRect(x: padding, y: padding, width: windowWidth, height: windowHeight),
                styleMask: NSTitledWindowMask,
                backing: .Buffered,
                `defer`: false)
            self.hasShadow = true
            self.styleMask = NSBorderlessWindowMask | NSResizableWindowMask
            self.movableByWindowBackground = true
            self.level = 7
            self.title = "AKAULowPassFilter"

            let viewRect = NSRect(x: 0, y: 0, width: windowWidth, height: windowHeight)
            let view = NSView(frame: viewRect)

            let topTitle = NSTextField()
            topTitle.stringValue = "AKAULowPassFilter"
            topTitle.editable = false
            topTitle.drawsBackground = false
            topTitle.bezeled = false
            topTitle.alignment = NSCenterTextAlignment
            topTitle.font = NSFont(name: "Lucida Grande", size: 24)
            topTitle.sizeToFit()
            topTitle.frame.origin.x = CGFloat(windowWidth / 2) - topTitle.frame.width / 2
            topTitle.frame.origin.y = CGFloat(windowHeight - padding) - topTitle.frame.height
            view.addSubview(topTitle)

            cutoffFrequencyTextField.stringValue = "Cutoff Frequency: \(lowPassFilter.cutoffFrequency) Hz"
            cutoffFrequencyTextField.editable = false
            cutoffFrequencyTextField.drawsBackground = false
            cutoffFrequencyTextField.bezeled = false
            cutoffFrequencyTextField.frame.origin.y = topTitle.frame.origin.y -  2 *  CGFloat(sliderHeight)
            view.addSubview(cutoffFrequencyTextField)

            cutoffFrequencySlider.target = self
            cutoffFrequencySlider.action = "updateCutofffrequency"
            cutoffFrequencySlider.minValue = 10
            cutoffFrequencySlider.maxValue = 22050
            cutoffFrequencySlider.floatValue = Float(lowPassFilter.cutoffFrequency)
            cutoffFrequencySlider.frame.origin.y = topTitle.frame.origin.y - 3 * CGFloat(sliderHeight)
            view.addSubview(cutoffFrequencySlider)
            resonanceTextField.stringValue = "Resonance: \(lowPassFilter.resonance) dB"
            resonanceTextField.editable = false
            resonanceTextField.drawsBackground = false
            resonanceTextField.bezeled = false
            resonanceTextField.frame.origin.y = topTitle.frame.origin.y -  5 *  CGFloat(sliderHeight)
            view.addSubview(resonanceTextField)

            resonanceSlider.target = self
            resonanceSlider.action = "updateResonance"
            resonanceSlider.minValue = -20
            resonanceSlider.maxValue = 40
            resonanceSlider.floatValue = Float(lowPassFilter.resonance)
            resonanceSlider.frame.origin.y = topTitle.frame.origin.y - 6 * CGFloat(sliderHeight)
            view.addSubview(resonanceSlider)

            self.contentView!.addSubview(view)
            self.makeKeyAndOrderFront(nil)
        }

        internal func updateCutofffrequency() {
            lowPassFilter.cutoffFrequency = cutoffFrequencySlider.floatValue
            cutoffFrequencyTextField.stringValue = "Cutoff Frequency \(String(format: "%0.4f", lowPassFilter.cutoffFrequency)) Hz"
        }
        internal func updateResonance() {
            lowPassFilter.resonance = resonanceSlider.floatValue
            resonanceTextField.stringValue = "Resonance \(String(format: "%0.4f", lowPassFilter.resonance)) dB"
        }

        required public init?(coder: NSCoder) {
            fatalError("init(coder:) has not been implemented")
        }
    }

#endif
