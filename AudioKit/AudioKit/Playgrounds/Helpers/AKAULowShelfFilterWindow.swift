//
//  AKAULowShelfFilterWindow.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

#if os(OSX)
    import Foundation
    import Cocoa

    /// A Window to control AKAULowShelfFilter in Playgrounds
    public class AKAULowShelfFilterWindow: NSWindow {

        private let windowWidth = 400
        private let padding = 30
        private let sliderHeight = 20
        private let numberOfComponents = 2

        /// Slider to control cutoffFrequency
        public let cutoffFrequencySlider: NSSlider
        /// Slider to control gain
        public let gainSlider: NSSlider

        private let cutoffFrequencyTextField: NSTextField
        private let gainTextField: NSTextField

        private var lowShelfFilter: AKAULowShelfFilter

        /// Initiate the AKAULowShelfFilter window
        public init(_ control: AKAULowShelfFilter) {
            lowShelfFilter = control
            let sliderWidth = windowWidth - 2 * padding

            cutoffFrequencySlider = NSSlider(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))
            gainSlider = NSSlider(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))

            cutoffFrequencyTextField = NSTextField(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))
            gainTextField = NSTextField(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))

            let titleHeightApproximation = 50
            let windowHeight = padding * 2 + titleHeightApproximation + numberOfComponents * 3 * sliderHeight

            super.init(contentRect: NSRect(x: padding, y: padding, width: windowWidth, height: windowHeight),
                styleMask: NSTitledWindowMask,
                backing: .Buffered,
                `defer`: false)
            self.hasShadow = true
            self.styleMask = NSBorderlessWindowMask | NSResizableWindowMask
            self.movableByWindowBackground = true
            self.level = 7
            self.title = "AKAULowShelfFilter"

            let viewRect = NSRect(x: 0, y: 0, width: windowWidth, height: windowHeight)
            let view = NSView(frame: viewRect)

            let topTitle = NSTextField()
            topTitle.stringValue = "AKAULowShelfFilter"
            topTitle.editable = false
            topTitle.drawsBackground = false
            topTitle.bezeled = false
            topTitle.alignment = NSCenterTextAlignment
            topTitle.font = NSFont(name: "Lucida Grande", size: 24)
            topTitle.sizeToFit()
            topTitle.frame.origin.x = CGFloat(windowWidth / 2) - topTitle.frame.width / 2
            topTitle.frame.origin.y = CGFloat(windowHeight - padding) - topTitle.frame.height
            view.addSubview(topTitle)

            cutoffFrequencyTextField.stringValue = "Cutoff Frequency: \(lowShelfFilter.cutoffFrequency) Hz"
            cutoffFrequencyTextField.editable = false
            cutoffFrequencyTextField.drawsBackground = false
            cutoffFrequencyTextField.bezeled = false
            cutoffFrequencyTextField.frame.origin.y = topTitle.frame.origin.y -  2 *  CGFloat(sliderHeight)
            view.addSubview(cutoffFrequencyTextField)

            cutoffFrequencySlider.target = self
            cutoffFrequencySlider.action = "updateCutofffrequency"
            cutoffFrequencySlider.minValue = 10
            cutoffFrequencySlider.maxValue = 200
            cutoffFrequencySlider.floatValue = Float(lowShelfFilter.cutoffFrequency)
            cutoffFrequencySlider.frame.origin.y = topTitle.frame.origin.y - 3 * CGFloat(sliderHeight)
            view.addSubview(cutoffFrequencySlider)
            gainTextField.stringValue = "Gain: \(lowShelfFilter.gain) dB"
            gainTextField.editable = false
            gainTextField.drawsBackground = false
            gainTextField.bezeled = false
            gainTextField.frame.origin.y = topTitle.frame.origin.y -  5 *  CGFloat(sliderHeight)
            view.addSubview(gainTextField)

            gainSlider.target = self
            gainSlider.action = "updateGain"
            gainSlider.minValue = -40
            gainSlider.maxValue = 40
            gainSlider.floatValue = Float(lowShelfFilter.gain)
            gainSlider.frame.origin.y = topTitle.frame.origin.y - 6 * CGFloat(sliderHeight)
            view.addSubview(gainSlider)

            self.contentView!.addSubview(view)
            self.makeKeyAndOrderFront(nil)
        }

        private func updateCutofffrequency() {
            lowShelfFilter.cutoffFrequency = cutoffFrequencySlider.floatValue
            cutoffFrequencyTextField.stringValue = "Cutoff Frequency \(String(format: "%0.4f", lowShelfFilter.cutoffFrequency)) Hz"
        }
        private func updateGain() {
            lowShelfFilter.gain = gainSlider.floatValue
            gainTextField.stringValue = "Gain \(String(format: "%0.4f", lowShelfFilter.gain)) dB"
        }

        /// Required initializer
        required public init?(coder: NSCoder) {
            fatalError("init(coder:) has not been implemented")
        }
    }

#endif
