//
//  AKDCBlock.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import Foundation

/** A DC blocking filter.

{"Implements the DC blocking filter"=>"Y[i] = X[i] - X[i-1] + (igain * Y[i-1])  Based on work by Perry Cook."}
*/
@objc class AKDCBlock : AKParameter {

    // MARK: - Properties

    private var dcblock = UnsafeMutablePointer<sp_dcblock>.alloc(1)
    private var dcblock2 = UnsafeMutablePointer<sp_dcblock>.alloc(1)

    private var input = AKParameter()



    // MARK: - Initializers

    /** Instantiates the filter with default values

    - parameter input: Input audio signal. 
    */
    init(input sourceInput: AKParameter)
    {
        super.init()
        input = sourceInput
        setup()
        dependencies = [input]
        bindAll()
    }

    // MARK: - Internals

    /** Bind every property to the internal filter */
    internal func bindAll() {
    }

    /** Internal set up function */
    internal func setup() {
        sp_dcblock_create(&dcblock)
        sp_dcblock_create(&dcblock2)
        sp_dcblock_init(AKManager.sharedManager.data, dcblock)
        sp_dcblock_init(AKManager.sharedManager.data, dcblock2)
    }

    /** Computation of the next value */
    override func compute() {
        sp_dcblock_compute(AKManager.sharedManager.data, dcblock, &(input.leftOutput), &leftOutput);
        sp_dcblock_compute(AKManager.sharedManager.data, dcblock2, &(input.rightOutput), &rightOutput);
    }

    /** Release of memory */
    override func teardown() {
        sp_dcblock_destroy(&dcblock)
        sp_dcblock_destroy(&dcblock2)
    }
}
