//
//  AKPanner.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka on 9/11/15.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import Foundation

/** Distribute an audio signal across two channels with a choice of methods.

Panning methods include equal power, square root, simple linear, and an alternative equal power method based on the MIDI Association Recommend Practice for GM2 RP036 (Default Pan Curve).
*/
@objc class AKPanner : AKParameter {

    // MARK: - Properties

    private var pan2 = UnsafeMutablePointer<sp_pan2>.alloc(1)

    private var input = AKParameter()


    /** Panning. A value of zero is hard left, and a value of 1 is hard right. [Default Value: 0.5] */
    var pan: AKParameter = akp(0.5) {
        didSet { pan.bind(&pan2.memory.pan) }
    }


    // MARK: - Initializers

    /** Instantiates the panner with default values */
    init(input sourceInput: AKParameter)
    {
        super.init()
        input = sourceInput
        setup()
        bindAll()
    }

    /**
    Instantiates the panner with all values

    - parameter input: Input audio signal. 
    - parameter pan: Panning. A value of zero is hard left, and a value of 1 is hard right. [Default Value: 0.5]
    */
    convenience init(
        input sourceInput: AKParameter,
        pan   panInput:    AKParameter)
    {
        self.init(input: sourceInput)
        pan   = panInput

        bindAll()
    }

    // MARK: - Internals

    /** Bind every property to the internal panner */
    internal func bindAll() {
        pan  .bind(&pan2.memory.pan)
    }

    /** Internal set up function */
    internal func setup() {
        sp_pan2_create(&pan2)
        sp_pan2_init(AKManager.sharedManager.data, pan2)
    }

    /** Computation of the next value */
    override func compute() {
        sp_pan2_compute(AKManager.sharedManager.data, pan2, &(input.leftOutput), &leftOutput, &rightOutput);
    }

    /** Release of memory */
    override func teardown() {
        sp_pan2_destroy(&pan2)
    }
}
