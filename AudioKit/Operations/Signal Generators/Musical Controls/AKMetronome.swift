//
//  AKMetronome.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka on 9/16/15.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import Foundation

/** Generator of a series of 1-sample ticks at a regular rate.

Typically, this is used alongside trigger-driven modules.
*/
@objc class AKMetronome : AKParameter {

    // MARK: - Properties

    private var metro = UnsafeMutablePointer<sp_metro>.alloc(1)


    /** The frequency to repeat. [Default Value: 2.0] */
    var frequency: AKParameter = akp(2.0) {
        didSet {
            frequency.bind(&metro.memory.freq)
            dependencies.append(frequency)
        }
    }


    // MARK: - Initializers

    /** Instantiates the metronome with default values
    */
    override init()
    {
        super.init()
        setup()
        bindAll()
    }

    /** Instantiates the metronome with all values

    - parameter frequency: The frequency to repeat. [Default Value: 2.0]
    */
    convenience init(
        frequency freqInput: AKParameter)
    {
        self.init()

        frequency = freqInput

        bindAll()
    }

    // MARK: - Internals

    /** Bind every property to the internal metronome */
    internal func bindAll() {
        frequency.bind(&metro.memory.freq)
        dependencies.append(frequency)
    }

    /** Internal set up function */
    internal func setup() {
        sp_metro_create(&metro)
        sp_metro_init(AKManager.sharedManager.data, metro)
    }

    /** Computation of the next value */
    override func compute() {
        sp_metro_compute(AKManager.sharedManager.data, metro, nil, &leftOutput);
        rightOutput = leftOutput
    }

    /** Release of memory */
    override func teardown() {
        sp_metro_destroy(&metro)
    }
}
