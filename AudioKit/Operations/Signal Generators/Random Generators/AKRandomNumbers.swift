//
//  AKRandomNumbers.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka on 9/16/15.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import Foundation

/** Random Number Generator

Generate random values within a range.
*/
@objc class AKRandomNumbers : AKParameter {

    // MARK: - Properties

    private var random = UnsafeMutablePointer<sp_random>.alloc(1)


    /** Minimum range limit. [Default Value: -0.2] */
    var lowerBound: AKParameter = akp(-0.2) {
        didSet {
            lowerBound.bind(&random.memory.min)
            dependencies.append(lowerBound)
        }
    }

    /** Maximum range limit. [Default Value: 0.2] */
    var upperBound: AKParameter = akp(0.2) {
        didSet {
            upperBound.bind(&random.memory.max)
            dependencies.append(upperBound)
        }
    }


    // MARK: - Initializers

    /** Instantiates the numbers with default values
    */
    override init()
    {
        super.init()
        setup()
        bindAll()
    }

    /** Instantiates the numbers with all values

    - parameter lowerBound: Minimum range limit. [Default Value: -0.2]
    - parameter upperBound: Maximum range limit. [Default Value: 0.2]
    */
    convenience init(
        lowerBound minInput: AKParameter,
        upperBound maxInput: AKParameter)
    {
        self.init()

        lowerBound = minInput
        upperBound = maxInput

        bindAll()
    }

    // MARK: - Internals

    /** Bind every property to the internal numbers */
    internal func bindAll() {
        lowerBound.bind(&random.memory.min)
        upperBound.bind(&random.memory.max)
        dependencies.append(lowerBound)
        dependencies.append(upperBound)
    }

    /** Internal set up function */
    internal func setup() {
        sp_random_create(&random)
        sp_random_init(AKManager.sharedManager.data, random)
    }

    /** Computation of the next value */
    override func compute() {
        sp_random_compute(AKManager.sharedManager.data, random, nil, &leftOutput);
        rightOutput = leftOutput
    }

    /** Release of memory */
    override func teardown() {
        sp_random_destroy(&random)
    }
}
