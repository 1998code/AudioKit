//
//  AKSpatialMixer.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import AVFoundation

/** AudioKit version of Apple's SpatialMixer Audio Unit */
public class AKSpatialMixer: AKNode {
    
    private let cd = AudioComponentDescription(
        componentType: kAudioUnitType_Mixer,
        componentSubType: kAudioUnitSubType_SpatialMixer,
        componentManufacturer: kAudioUnitManufacturer_Apple,
        componentFlags: 0,
        componentFlagsMask: 0)
    
    private var internalEffect = AVAudioUnit()
    private var internalAU = AudioUnit()
    
    /** Azimuth (Degrees) ranges from -180 to 180 (Default: 0) */
    public var azimuth: Float = 0 {
        didSet {
            if azimuth < -180 {
                azimuth = -180
            }
            if azimuth > 180 {
                azimuth = 180
            }
            AudioUnitSetParameter(
                internalAU,
                kSpatialMixerParam_Azimuth,
                kAudioUnitScope_Input, 0,
                azimuth, 0)
        }
    }
    
    /** Elevation (Degrees) ranges from -90 to 90 (Default: 0) */
    public var elevation: Float = 0 {
        didSet {
            if elevation < -90 {
                elevation = -90
            }
            if elevation > 90 {
                elevation = 90
            }
            AudioUnitSetParameter(
                internalAU,
                kSpatialMixerParam_Elevation,
                kAudioUnitScope_Input, 0,
                elevation, 0)
        }
    }
    
    /** Distance (Metres) ranges from 0 to 10000 (Default: 0) */
    public var distance: Float = 0 {
        didSet {
            if distance < 0 {
                distance = 0
            }
            if distance > 10000 {
                distance = 10000
            }
            AudioUnitSetParameter(
                internalAU,
                kSpatialMixerParam_Distance,
                kAudioUnitScope_Input, 0,
                distance, 0)
        }
    }
    
    /** Initialize the spatial mixer node */
    public init(
        _ input: AKNode,
        azimuth: Float = 0,
        elevation: Float = 0,
        distance: Float = 0) {
            
            self.azimuth = azimuth
            self.elevation = elevation
            self.distance = distance
            super.init()
            
            AVAudioUnit.instantiateWithComponentDescription(cd, options: []) {
                avAudioUnit, error in
                guard let avAudioUnit = avAudioUnit else { return }
                
                self.output = avAudioUnit
                self.internalAU = avAudioUnit.audioUnit
                AKManager.sharedInstance.engine.attachNode(self.output!)
                AKManager.sharedInstance.engine.connect(input.output!, to: self.output!, format: nil)
            }
    }
}
