//
//  AKParametricEQ.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Customized by Aurelius Prochazka to change the variable name from centerFreq to centerFrequency
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import AVFoundation

/// AudioKit version of Apple's ParametricEQ Audio Unit
///
/// - parameter input: Input node to process
/// - parameter centerFrequency: Center Freq (Hz) ranges from 20 to 22050 (Default: 2000)
/// - parameter q: Q (Hz) ranges from 0.1 to 20 (Default: 1.0)
/// - parameter gain: Gain (dB) ranges from -20 to 20 (Default: 0)
///
public struct AKParametricEQ: AKNode {
    
    private let cd = AudioComponentDescription(
        componentType: kAudioUnitType_Effect,
        componentSubType: kAudioUnitSubType_ParametricEQ,
        componentManufacturer: kAudioUnitManufacturer_Apple,
        componentFlags: 0,
        componentFlagsMask: 0)
    
    internal var internalEffect = AVAudioUnitEffect()
    internal var internalAU = AudioUnit()
    public var avAudioNode: AVAudioNode
    
    /// Center Freq (Hz) ranges from 20 to 22050 (Default: 2000)
    public var centerFrequency: Double = 2000 {
        didSet {
            if centerFrequency < 20 {
                centerFrequency = 20
            }
            if centerFrequency > 22050 {
                centerFrequency = 22050
            }
            AudioUnitSetParameter(
                internalAU,
                kParametricEQParam_CenterFreq,
                kAudioUnitScope_Global, 0,
                Float(centerFrequency), 0)
        }
    }
    
    /// Q (Hz) ranges from 0.1 to 20 (Default: 1.0)
    public var q: Double = 1.0 {
        didSet {
            if q < 0.1 {
                q = 0.1
            }
            if q > 20 {
                q = 20
            }
            AudioUnitSetParameter(
                internalAU,
                kParametricEQParam_Q,
                kAudioUnitScope_Global, 0,
                Float(q), 0)
        }
    }
    
    /// Gain (dB) ranges from -20 to 20 (Default: 0)
    public var gain: Double = 0 {
        didSet {
            if gain < -20 {
                gain = -20
            }
            if gain > 20 {
                gain = 20
            }
            AudioUnitSetParameter(
                internalAU,
                kParametricEQParam_Gain,
                kAudioUnitScope_Global, 0,
                Float(gain), 0)
        }
    }
    
    /// Initialize the parametric eq node
    ///
    /// - parameter input: Input node to process
    /// - parameter centerFrequency: Center Freq (Hz) ranges from 20 to 22050 (Default: 2000)
    /// - parameter q: Q (Hz) ranges from 0.1 to 20 (Default: 1.0)
    /// - parameter gain: Gain (dB) ranges from -20 to 20 (Default: 0)
    ///
    public init(
        _ input: AKNode,
        centerFrequency: Double = 2000,
        q: Double = 1.0,
        gain: Double = 0) {
            
            self.centerFrequency = centerFrequency
            self.q = q
            self.gain = gain
            
            internalEffect = AVAudioUnitEffect(audioComponentDescription: cd)
            self.avAudioNode = internalEffect
            AKManager.sharedInstance.engine.attachNode(self.avAudioNode)
            AKManager.sharedInstance.engine.connect(input.avAudioNode, to: self.avAudioNode, format: AKManager.format)
            internalAU = internalEffect.audioUnit
            
            AudioUnitSetParameter(internalAU, kParametricEQParam_CenterFreq, kAudioUnitScope_Global, 0, Float(centerFrequency), 0)
            AudioUnitSetParameter(internalAU, kParametricEQParam_Q, kAudioUnitScope_Global, 0, Float(q), 0)
            AudioUnitSetParameter(internalAU, kParametricEQParam_Gain, kAudioUnitScope_Global, 0, Float(gain), 0)
    }
}
