<%= header_partial %>

/// <%= description %>
///
<% if inputs.count > 0 -%>
/// - parameter input: Input node to process
<% end -%>
<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
/// - parameter <%= data["ak-variable"] %>: <%= data["comment"] %>
<% end -%>
<% end -%>
///
public struct <%= node %>: AKNode {

    // MARK: - Properties

    /// Required property for AKNode
    public var avAudioNode: AVAudioNode

    internal var internalAU: <%= node %>AudioUnit?
    internal var token: AUParameterObserverToken?

<%= parameters_partial -%>

    // MARK: - Initialization

    /// Initialize this <%= one_word_desc %> node
    ///
<% if inputs.count > 0 -%>
    /// - parameter input: Input node to process
<% end -%>
<% (parameters + constants).each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
    /// - parameter <%= data["ak-variable"] %>: <%= data["comment"] %>
<% end -%>
<% end -%>
    ///
    public init(
<% if inputs.count > 0 -%>
        _ input: AKNode,
<% end -%>
<% (parameters + constants).each_with_index do |sp_parameter, i| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        <%= data["ak-variable"] %>: Double = <%= data["default"] %><%= ",\n" if i < (parameters + constants).count - 1 %><% end %><% end %>) {

<% parameters.each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        self.<%= data["ak-variable"] %> = <%= data["ak-variable"] %>
<% end -%>
<% end -%>

<%= description_partial %>

<%= audio_unit_setup_partial %>

<%= parameter_observation_partial %>
<% parameters.each do |sp_parameter| -%>
<% sp_parameter.each do  |sp_var, data| -%>
        <%= data["ak-variable"] %>Parameter?.setValue(Float(<%= data["ak-variable"] %>), originator: token!)
<% end -%>
<% end -%>
    }
}
