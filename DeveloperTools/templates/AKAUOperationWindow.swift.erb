//
//  AKAU<%= au_name %>Window.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Copyright (c) 20<%= Time.now.strftime('%y') %> Aurelius Prochazka. All rights reserved.
//

#if os(OSX)
    import Foundation
    import Cocoa

    public class AKAU<%= au_name %>Window: NSWindow {

        let windowWidth = 400
        let padding = 30
        let sliderHeight = 20
        let numberOfComponents = <%= parameters.count %>

<% parameters.each do |parameter| -%>
        public let <%= parameter[:variable] %>Slider: NSSlider
<% end -%>

<% parameters.each do |parameter| -%>
        let <%= parameter[:variable] %>TextField: NSTextField
<% end -%>

        var <%= au_name.uncapitalize %>: AKAU<%= au_name %>

        public init(_ control: AKAU<%= au_name %>) {
            <%= au_name.uncapitalize %> = control
            let sliderWidth = windowWidth - 2 * padding

<% parameters.each do |parameter| -%>
            <%= parameter[:variable] %>Slider = NSSlider(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))
<% end -%>

<% parameters.each do |parameter| -%>
            <%= parameter[:variable] %>TextField = NSTextField(frame: NSRect(x: padding, y: 0, width: sliderWidth, height: sliderHeight))
<% end -%>

            let titleHeightApproximation = 50
            let windowHeight = padding * 2 + titleHeightApproximation + numberOfComponents * 3 * sliderHeight

            super.init(contentRect: NSRect(x: padding, y: padding, width: windowWidth, height: windowHeight),
                styleMask: NSTitledWindowMask,
                backing: .Buffered,
                `defer`: false)
            self.hasShadow = true
            self.styleMask = NSBorderlessWindowMask | NSResizableWindowMask
            self.movableByWindowBackground = true
            self.level = 7
            self.title = "AKAU<%= au_name %>"

            let viewRect = NSRect(x: 0, y: 0, width: windowWidth, height: windowHeight)
            let view = NSView(frame: viewRect)

            let topTitle = NSTextField()
            topTitle.stringValue = "AKAU<%= au_name %>"
            topTitle.editable = false
            topTitle.drawsBackground = false
            topTitle.bezeled = false
            topTitle.alignment = NSCenterTextAlignment
            topTitle.font = NSFont(name: "Lucida Grande", size: 24)
            topTitle.sizeToFit()
            topTitle.frame.origin.x = CGFloat(windowWidth / 2) - topTitle.frame.width / 2
            topTitle.frame.origin.y = CGFloat(windowHeight - padding) - topTitle.frame.height
            view.addSubview(topTitle)

<% parameters.each_with_index do |parameter, i| -%>
            <%= parameter[:variable] %>TextField.stringValue = "<%= parameter[:variable].underscore.humanize.titlecase %>: \(<%= au_name.uncapitalize %>.<%= parameter[:variable] %>) <%= parameter[:type] %>"
            <%= parameter[:variable] %>TextField.editable = false
            <%= parameter[:variable] %>TextField.drawsBackground = false
            <%= parameter[:variable] %>TextField.bezeled = false
            <%= parameter[:variable] %>TextField.frame.origin.y = topTitle.frame.origin.y -  <%= 2 * (i+1) + i %> *  CGFloat(sliderHeight)
            view.addSubview(<%= parameter[:variable] %>TextField)

            <%= parameter[:variable] %>Slider.target = self
            <%= parameter[:variable] %>Slider.action = "update<%= parameter[:variable].capitalize %>"
            <%= parameter[:variable] %>Slider.minValue = <%= parameter[:min] %>
            <%= parameter[:variable] %>Slider.maxValue = <%= parameter[:max] %>
            <%= parameter[:variable] %>Slider.floatValue = Float(<%= au_name.uncapitalize %>.<%= parameter[:variable] %>)
            <%= parameter[:variable] %>Slider.frame.origin.y = topTitle.frame.origin.y - <%= 2 * (i+1) + i + 1 %> * CGFloat(sliderHeight)
            view.addSubview(<%= parameter[:variable] %>Slider)
<% end -%>

            self.contentView!.addSubview(view)
            self.makeKeyAndOrderFront(nil)
        }

<% parameters.each do |parameter| -%>
        internal func update<%= parameter[:variable].capitalize %>() {
            <%= au_name.uncapitalize %>.<%= parameter[:variable] %> = <%= parameter[:variable] %>Slider.floatValue
            <%= parameter[:variable] %>TextField.stringValue = "<%= parameter[:variable].underscore.humanize.titlecase %> \(String(format: "%0.4f", <%= au_name.uncapitalize %>.<%= parameter[:variable] %>)) <%= parameter[:type] %>"
        }
<% end -%>

        required public init?(coder: NSCoder) {
            fatalError("init(coder:) has not been implemented")
        }
    }

#endif
